import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, ContextTypes

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–® –¢–û–ö–ï–ù –ë–û–¢–ê
BOT_TOKEN = "8435863501:AAG1uFhi4LTDFB3dVYxt3qvSAW9sxzdPUHc"

# –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–®–ò –î–ê–ù–ù–´–ï
WEB_APP_URL = "https://morachkovskiyapp.com"

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Web App."""
    user = update.effective_user
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Web App
    keyboard = [
        [InlineKeyboardButton(
            text="üèÉ‚Äç‚ôÇÔ∏è –û—Ç–∫—Ä—ã—Ç—å MisterMo App", 
            web_app=WebAppInfo(url=WEB_APP_URL)
        )]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    welcome_text = f"""
üéØ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ MisterMo, {user.first_name}!*

–°–∏—Å—Ç–µ–º–∞ –ú–æ—Ä–∞—á–∫–æ–≤—Å–∫–æ–≥–æ - –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∑–¥–æ—Ä–æ–≤—å—é –∏ –ø–∏—Ç–∞–Ω–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö.

üîπ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–∏—Ç–∞–Ω–∏—è
üîπ –°–∫–∞–Ω–µ—Ä –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ –∫–∞–ª–æ—Ä–∏–π  
üîπ –î—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏
üîπ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
üîπ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:
    """
    
    await update.message.reply_text(
        welcome_text, 
        reply_markup=reply_markup, 
        parse_mode='Markdown'
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–º–æ—â—å."""
    help_text = """
üì± *–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:*

/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/app - –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ

üîó –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Web App!
    """
    
    keyboard = [
        [InlineKeyboardButton(
            text="üèÉ‚Äç‚ôÇÔ∏è –û—Ç–∫—Ä—ã—Ç—å App", 
            web_app=WebAppInfo(url=WEB_APP_URL)
        )]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        help_text, 
        reply_markup=reply_markup, 
        parse_mode='Markdown'
    )

async def app_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç Web App."""
    keyboard = [
        [InlineKeyboardButton(
            text="üèÉ‚Äç‚ôÇÔ∏è –û—Ç–∫—Ä—ã—Ç—å MisterMo App", 
            web_app=WebAppInfo(url=WEB_APP_URL)
        )]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:", 
        reply_markup=reply_markup
    )

def main() -> None:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞."""
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("app", app_command))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    main()