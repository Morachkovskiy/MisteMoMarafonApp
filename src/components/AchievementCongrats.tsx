import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Dialog, DialogContent } from '@/components/ui/dialog';
import { Share2, Instagram, X } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';

interface Achievement {
  id: string;
  icon: string;
  title: string;
  description: string;
  unlocked: boolean;
}

interface AchievementCongratsProps {
  achievement: Achievement;
  isOpen: boolean;
  onClose: () => void;
}

export function AchievementCongrats({ achievement, isOpen, onClose }: AchievementCongratsProps) {
  const { toast } = useToast();

  const shareToInstagram = () => {
    const text = `üéâ –ù–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!\n\n${achievement.icon} ${achievement.title}\n${achievement.description}\n\n#–ú–∏—Å—Ç–µ—Ä–ú–û #–ó–¥–æ—Ä–æ–≤—ã–π–û–±—Ä–∞–∑–ñ–∏–∑–Ω–∏ #–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ`;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å–ª–∏ –º—ã –≤ Telegram Web App
    if (window.Telegram?.WebApp) {
      // –û—Ç–∫—Ä—ã–≤–∞–µ–º Instagram Stories
      const instagramUrl = `https://www.instagram.com/stories/camera/?text=${encodeURIComponent(text)}`;
      window.open(instagramUrl, '_blank');
    } else {
      // –î–ª—è –æ–±—ã—á–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞ –∫–æ–ø–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
      navigator.clipboard.writeText(text);
      toast({
        title: "–¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!",
        description: "–í—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –≤ Instagram Stories"
      });
    }
  };

  const copyToClipboard = () => {
    const text = `üéâ –ù–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!\n\n${achievement.icon} ${achievement.title}\n${achievement.description}\n\n#–ú–∏—Å—Ç–µ—Ä–ú–û #–ó–¥–æ—Ä–æ–≤—ã–π–û–±—Ä–∞–∑–ñ–∏–∑–Ω–∏ #–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ`;
    navigator.clipboard.writeText(text);
    toast({
      title: "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!",
      description: "–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ–º –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö"
    });
  };

  if (!achievement.unlocked) return null;

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="bg-gradient-to-br from-yellow-400 via-yellow-500 to-amber-600 border-yellow-300 max-w-sm mx-auto">
        <div className="text-center space-y-6 py-6">
          {/* Logo */}
          <div className="w-24 h-16 mx-auto">
            <img 
              src="/lovable-uploads/f013bf5a-7942-4ed0-aaac-dbe0ac8b7022.png" 
              alt="MisterMO Health" 
              className="w-full h-full object-contain" 
            />
          </div>

          {/* Achievement */}
          <div className="space-y-4">
            <div className="text-6xl">üèÜ</div>
            <div className="space-y-2">
              <h2 className="text-2xl font-bold text-amber-900">–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</h2>
              <h3 className="text-lg font-semibold text-amber-800">{achievement.title}</h3>
              <p className="text-sm text-amber-700">{achievement.description}</p>
            </div>
          </div>

          {/* Share Buttons */}
          <div className="space-y-3">
            <p className="text-sm font-medium text-amber-900">
              üåü –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º —É—Å–ø–µ—Ö–æ–º!
            </p>
            
            <div className="space-y-2">
              <Button 
                onClick={shareToInstagram}
                className="w-full bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white"
              >
                <Instagram size={18} className="mr-2" />
                –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ Instagram Stories
              </Button>
              
              <Button 
                onClick={copyToClipboard}
                variant="outline" 
                className="w-full bg-white/20 border-amber-300 text-amber-900 hover:bg-white/30"
              >
                <Share2 size={18} className="mr-2" />
                –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è –¥—Ä—É–≥–∏—Ö —Å–æ—Ü—Å–µ—Ç–µ–π
              </Button>
            </div>
          </div>

          {/* Close Button */}
          <Button 
            onClick={onClose}
            variant="ghost" 
            size="sm"
            className="absolute top-4 right-4 text-amber-800 hover:bg-white/20"
          >
            <X size={20} />
          </Button>
        </div>
      </DialogContent>
    </Dialog>
  );
}